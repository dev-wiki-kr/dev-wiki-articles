name: Release

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  release:
    runs-on: ubuntu-latest
    env:  
      API_URL: 'https://devwiki.co.kr'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Get the changed files
      id: changed-files
      env: 
        AUTHOR: ${{ github.event.pull_request.user.login }}
      run: |
        FILES=$(curl -s \
        -H "Accept: application/vnd.github.v3+json" \
        "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" \
        | jq -c '[.[] | {filename: .filename, status: .status, contents_url: .contents_url}]')

        echo "$FILES" > changed_files.json

        cat "changed_files.json" | jq -c '.[]' | while read file; do
          FILENAME=$(echo $file | jq -r '.filename')
          SHORT_TITLE=$(basename "$FILENAME" .md)
          STATUS=$(echo $file | jq -r '.status')
          CONTENTS_URL=$(echo $file | jq -r '.contents_url')
          echo "SHORT_TITLE: $SHORT_TITLE"
          echo "Status: $STATUS"
          echo "Contents URL: $CONTENTS_URL"

          CONTENT=$(curl -s \
            -H "Accept: application/vnd.github.v3.raw" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "$CONTENTS_URL")
          echo "Content: $CONTENT"

          while IFS= read -r line; do
            if [[ "$line" =~ ^#[^#].* ]]; then
              TITLE=${line#\# }
              break
            fi
          done <<< $CONTENT

          echo "TITLE: $TITLE"

          echo "API_URL: $API_URL"
          echo "API_URL: $AUTHOR"

          if [ $STATUS = "modified" ]; then
          JSON_BODY=$(jq -n --arg title "$TITLE" --arg content "$CONTENT" --arg editor "$AUTHOR" '{title: "$title", content: "$content", editor: "$editor"}')

            curl -X PATCH $API_URL/api/post/$SHORT_TITLE \
              -H "Content-Type: application/json" \
              -d "$JSON_BODY"
          else
            echo "TEST_TITLE: $TITLE"
            echo "TEST_SHORT_TITLE: $SHORT_TITLE"
            echo "TEST_CONTENT: $CONTENT"
            echo "TEST_AUTHOR: $AUTHOR"

            JSON_BODY=$(jq -n --arg title "$TITLE" --arg shortTitle "$SHORT_TITLE" --arg content "$CONTENT" --arg userName "$AUTHOR" '{title: "$title", shortTitle: "$shortTitle", content: "$content", userName: "$userName"}')

            curl -X POST $API_URL/api/post \
              -H "Content-Type: application/json" \
              -d "$JSON_BODY"
          fi
        done
